Encapsulation
This is one of the fundamental OOP concepts. It allows creating of classes to write code and store data. Use private access modifier to
secure the data by limiting the access. We create getter setter method for every field
if you want others to see or change those fields.

Why encapsulation
    It improves the security of the data that we store in the fields of a class
    which leads us to a more secure code.


Collections framework:
Collections in Java contain allot of classes and interfaces which helps us to store
and manipulate large amounts of data easily and efficiently.

WHy collections framework
Arrays have limitations
1) They are fixed in size meaning, once we provide the size, we cannot change it afterwords.
2) They don't have any built in methods to help us process the data.



// wrapper class =  provides a way to use primitive data types as reference data types
        //     reference data types contain useful methods
        //     can be used with collections (ex.ArrayList)

        //primitive  //wrapper
        //---------  //-------
        // boolean  Boolean
        // char   Character
        // int   Integer
        // double  Double

        // autoboxing = the automatic conversion that the Java compiler makes between the primitive types and their corresponding object wrapper classes
        // unboxing = the reverse of autoboxing. Automatic conversion of wrapper class to primitive